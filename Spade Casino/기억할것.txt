택훈형한테 연락해서 여쭤보기

지금 만드는 FS가 과연 좋은가?

다른 게임을 급하게 만들어서 쓴다면 그게 좋은가? (ex)푸쉬푸쉬, 포커)


2419759

♠
♣
♥
◆

노력한점

두가지 포커 모두 7개의 패를 사용하는데, 실제 포커에서 계산하는 것은 5장의 패이다.
7c5의 경우의 수를 모두 탐색하는 방법을 사용했었는데, n장의 패를 모두 탐색하여 조건에 부합하는 카드를
찾는 방식으로 변경하였다.
점수는 특정한 규칙의 숫자로 변경하여 패의 높낮음을 가렸다.

세븐포커에서, 사용자의 입력 없이도 일정한 속도로 컴퓨터들의 턴이 지나가도록 타이머를 이용하였다.


슬롯에서, 카드가 빠르게 변화해야 하는데 화면이 심하게 깜빡거려 게임을 정상적으로 하기 어려웠다.
더블 버퍼링 기법을 사용하여 부드럽게 출력하고, 버퍼에 버튼은 그리지 않으므로 클래스 스타일에
WS_CLIPSHIRDREN 을 주어 차일드를 그리지 않게 하였다.


세이브파일을 별도로 만들어 보관하기 불편하고 망실의 위험이 있는 것을 대비하기 위해 exe 내부에 삽입하였다.
프로그램에 리소스로 업데이터를 넣어 업데이터와의 연동으로 자동으로 exe파일 내부에 세이브를 삽입하게 한다.

컴퓨터 플레이어가 하는 배팅이 제멋대로라 포커의 매력을 느끼기 어려웠다.
그래서 자신의 패와 상대방이 보여주는 패를 이용하여 가능한 패들에 점수를 매겨 계산, 능동적으로 배팅하게 하였다.
AI를 제작하여 보다 효율적으로 컴퓨터가 플레이하도록 되었다.

세븐포커에서 패를 나눠주는 것을 보다 확실하게 표현하기 위해 회전 기능이 있는 함수를 사용하였다.

그림을 그릴 때마다 그래픽을 가져와야 하여 속도 저하가 발생하기도 하였다.
프로그램을 시작시킬 때 모든 그래픽 리소스를 미리 읽어와 메모리상에 올려놓고, 그림그릴때 사용만 편하게 하였다.

일정량 이상의 화면 출력이 발생할 시 리소스들이 출력되지 않도록 되는 것을 발견하였다.
리소스를 여러번 읽어오는 것이 문제라고 생각하여 초기에 모두 메모리에 띄워본 결과, 해결되었다.

블랙잭에서 스플릿되어 패묶음이 여럿일 경우, 각각의 행동을 제어하는 차일드들이 따로 필요하였다.
그러나 차일드들이 하나의 메시지 처리함수를 공유하므로, 행동이 올바르게 나타나지 못했다.
그래서 차일드 생성 시에 여분의 메모리를 생성, 그 위치에 상태를 저장함으로서 구별되게 하였다.

